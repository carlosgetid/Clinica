package Gui;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Arreglos.ArregloCama;
import Clases.Cama;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.JScrollPane;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class GuiCama extends JFrame implements ActionListener, ItemListener {

	private JPanel contentPane;
	private JLabel lblNumeroDeCama;
	private JTextField txtNumeroCama;
	private JLabel lblCategoria;
	private JComboBox cboCategoria;
	private JLabel lblPrecioDia;
	private JTextField txtPrecioDia;
	private JLabel lblEstado;
	private JComboBox cboEstado;
	private JButton btnAdicionar;
	private JButton btnConsultar;
	private JButton btnModificar;
	private JButton btnEliminar;
	private JButton btnListar;
	private JScrollPane scrollPane;
	private JButton btnCerrar;
	private JTable tableC;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GuiCama frame = new GuiCama();
					frame.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public GuiCama() {
		setTitle("Cama");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 595, 404);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		lblNumeroDeCama = new JLabel("Numero de cama");
		lblNumeroDeCama.setBounds(10, 11, 99, 14);
		contentPane.add(lblNumeroDeCama);
		
		txtNumeroCama = new JTextField();
		txtNumeroCama.setBounds(108, 8, 86, 20);
		contentPane.add(txtNumeroCama);
		txtNumeroCama.setColumns(10);
		
		lblCategoria = new JLabel("Categoria");
		lblCategoria.setBounds(10, 36, 84, 14);
		contentPane.add(lblCategoria);
		
		cboCategoria = new JComboBox();
		cboCategoria.addItemListener(this);
		cboCategoria.setModel(new DefaultComboBoxModel(new String[] {"Basica", "Estandar", "Premiun"}));
		cboCategoria.setToolTipText("");
		cboCategoria.setBounds(108, 33, 84, 20);
		contentPane.add(cboCategoria);
		
		lblPrecioDia = new JLabel("Precio dia");
		lblPrecioDia.setBounds(10, 64, 84, 14);
		contentPane.add(lblPrecioDia);
		
		txtPrecioDia = new JTextField();
		txtPrecioDia.setBounds(108, 61, 86, 20);
		contentPane.add(txtPrecioDia);
		txtPrecioDia.setColumns(10);
		
		lblEstado = new JLabel("Estado");
		lblEstado.setBounds(10, 95, 46, 14);
		contentPane.add(lblEstado);
		
		cboEstado = new JComboBox();
		cboEstado.setModel(new DefaultComboBoxModel(new String[] {"Libre", "Ocupada"}));
		cboEstado.setBounds(110, 92, 84, 20);
		contentPane.add(cboEstado);
		
		btnAdicionar = new JButton("Adicionar");
		btnAdicionar.addActionListener(this);
		btnAdicionar.setBounds(337, 10, 89, 23);
		contentPane.add(btnAdicionar);
		
		btnConsultar = new JButton("Consultar");
		btnConsultar.addActionListener(this);
		btnConsultar.setBounds(337, 51, 89, 23);
		contentPane.add(btnConsultar);
		
		btnModificar = new JButton("Modificar");
		btnModificar.addActionListener(this);
		btnModificar.setBounds(337, 91, 89, 23);
		contentPane.add(btnModificar);
		
		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(337, 130, 89, 23);
		contentPane.add(btnEliminar);
		
		btnListar = new JButton("Listar");
		btnListar.addActionListener(this);
		btnListar.setBounds(463, 36, 89, 23);
		contentPane.add(btnListar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 176, 559, 178);
		contentPane.add(scrollPane);
		
		tableC = new JTable();
		tableC.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"N\u00B0 Cama", "Categoria", "Precio Dia", "Estado"
			}
		));
		scrollPane.setViewportView(tableC);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(463, 91, 89, 23);
		contentPane.add(btnCerrar);
		listar();
	}
	public void actionPerformed(ActionEvent arg0) {
		if (arg0.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(arg0);
		}
		if (arg0.getSource() == btnListar) {
			actionPerformedBtnListar(arg0);
		}
		if (arg0.getSource() == btnModificar) {
			actionPerformedBtnModificar(arg0);
		}
		if (arg0.getSource() == btnConsultar) {
			actionPerformedBtnConsultar(arg0);
		}
		if (arg0.getSource() == btnAdicionar) {
			actionPerformedBtnAdicionar(arg0);
		}
		if (arg0.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(arg0);
		}
	}
	
	/*ArregloCama ac = new ArregloCama();*/
	
	void listar(){
		imprimir("Num.\tCategoria\tPrecio\tEstado");
		for(int i=0;i<GuiPrincipal.ac.tamaño();i++){
			Cama c=GuiPrincipal.ac.obtener(i);
			imprimir(
				+c.getNumeroCama()+"\t"
				+c.getCategoria()+"\t"
				+c.getPrecioDia()+"\t"
				+c.getEstado()
					);
	}
	}
	void imprimir(String x){
	}
	int leerNumero(){
		return Integer.parseInt(txtNumeroCama.getText());
	}
	int leerCategoria(){
		return Integer.parseInt(txtNumeroCama.getText());
	}
	double leerPrecio(){
		return Double.parseDouble(txtPrecioDia.getText());
	}
	int leerEstado(){
		return cboEstado.getSelectedIndex();
	}
	protected void actionPerformedBtnCerrar(ActionEvent arg0) {
		dispose();
	}
	protected void actionPerformedBtnAdicionar(ActionEvent arg0) {
		if(GuiPrincipal.ac.buscar(leerNumero())==null){
			Cama c=new Cama(leerNumero(), leerCategoria(), leerPrecio(), leerEstado());
			GuiPrincipal.ac.adicionar(c);
			JOptionPane.showMessageDialog(this, "Ingresado correctamente");
			listar();
			GuiPrincipal.ac.grabarCama();
		}
		else JOptionPane.showMessageDialog(this, "ya existe");
	}
	protected void actionPerformedBtnConsultar(ActionEvent arg0) {
		int num=leerNumero();
		Cama c = GuiPrincipal.ac.buscar(num);
		if(c !=null){
			cboCategoria.setSelectedIndex(c.getCategoria());
			txtPrecioDia.setText(""+c.getPrecioDia());
			cboEstado.setSelectedIndex(c.getEstado());
		}
		else
			JOptionPane.showMessageDialog(this, "El código no existe");
	}
	protected void actionPerformedBtnModificar(ActionEvent arg0) {
		int num=leerNumero();
		Cama c = GuiPrincipal.ac.buscar(num);
		if(c !=null){
			int cat=leerCategoria();
			double precio=leerPrecio();
			int estado=leerEstado();
			c.setCategoria(cat);
			c.setPrecioDia(precio);
			c.setEstado(estado);
			listar();
		}
		else
			JOptionPane.showMessageDialog(this, "El código no existe");
	}
	protected void actionPerformedBtnListar(ActionEvent arg0) {
		listar();
	}
	protected void actionPerformedBtnEliminar(ActionEvent arg0) {
		if(GuiPrincipal.ac.buscar(leerNumero())!=null){
			Cama c=GuiPrincipal.ac.buscar(leerNumero());
			GuiPrincipal.ac.eliminar(c);
			listar();
			GuiPrincipal.ac.grabarCama();
		}else
			JOptionPane.showMessageDialog(this, "Cama no existe");
	}
	public void itemStateChanged(ItemEvent arg0) {
		if (arg0.getSource() == cboCategoria) {
			itemStateChangedCboCategoria(arg0);
		}
	}
	protected void itemStateChangedCboCategoria(ItemEvent arg0) {
		int op=cboCategoria.getSelectedIndex();
		if(op==0)txtPrecioDia.setText(""+70);
		else if(op==1)txtPrecioDia.setText(""+120);
		else 		  txtPrecioDia.setText(""+180);
	}
}
